// Generated by ts-to-zod
import { z } from 'zod'

const conferenceDateTSchema = z.literal(Primitive._String)

const pidSchema = z.literal(Primitive._String)

const organizationTSchema = z.literal(Primitive._String)

const orcidTSchema = z.literal(Primitive._String)

const itemNumberTSchema = z.literal(Primitive._String)

const identifierTSchema = z.literal(Primitive._String)

const formatTSchema = z.literal(Primitive._String)

const resourceTSchema = z.literal(Primitive._String)

const cmAssertionSchema = z.literal(Primitive._String)

const isbnTSchema = z.literal(Primitive._String)

const issnTSchema = z.literal(Primitive._String)

export const abbrevTitlePrimitiveTypeSchema = z.string().min(1).max(150)

export const stdAltAsPublishedApprovedMonthSchema = z.any()

export const stdAltAsPublishedApprovedYearSchema = z.string()

export const bookBookTypeSchema = z.union([
  z.literal('edited_book'),
  z.literal('monograph'),
  z.literal('reference'),
  z.literal('other'),
])

export const codenPrimitiveTypeSchema = z.string().min(1).max(6)

export const componentNumberPrimitiveTypeSchema = z.string().min(1).max(50)

export const componentComponentSizeSchema = z.any()

export const contentItemComponentTypeSchema = z.union([
  z.literal('chapter'),
  z.literal('section'),
  z.literal('part'),
  z.literal('track'),
  z.literal('reference_entry'),
  z.literal('other'),
])

export const conferenceAcronymPrimitiveTypeSchema = z.string().min(1).max(127)

export const conferenceDateSchema = conferenceDateTSchema.extend({
  type: z.literal('element'),
  name: z.literal('conference_date'),
  attributes: z.object({
    end_day: z.any().optional(),
    end_month: z.any().optional(),
    end_year: z.any().optional(),
    start_day: z.any().optional(),
    start_month: z.any().optional(),
    start_year: z.any().optional(),
  }),
})

export const conferenceLocationPrimitiveTypeSchema = z.string().min(2).max(255)

export const conferenceNamePrimitiveTypeSchema = z.string().min(3).max(512)

export const conferenceNumberPrimitiveTypeSchema = z.string().min(1).max(15)

export const conferenceSponsorPrimitiveTypeSchema = z.string().min(1).max(255)

export const conferenceThemePrimitiveTypeSchema = z.string().min(1).max(255)

export const resourceContentVersionSchema = z.union([z.literal('vor'), z.literal('am')])

export const contractNumberPrimitiveTypeSchema = z.string().min(2).max(255)

export const contributorRoleSchema = z.union([
  z.literal('author'),
  z.literal('editor'),
  z.literal('chair'),
  z.literal('reviewer'),
  z.literal('review-assistant'),
  z.literal('stats-reviewer'),
  z.literal('reviewer-external'),
  z.literal('reader'),
  z.literal('translator'),
])

export const itemCountrySchema = z.union([
  z.literal('AD'),
  z.literal('AE'),
  z.literal('AF'),
  z.literal('AG'),
  z.literal('AI'),
  z.literal('AL'),
  z.literal('AM'),
  z.literal('AN'),
  z.literal('AO'),
  z.literal('AQ'),
  z.literal('AR'),
  z.literal('AS'),
  z.literal('AT'),
  z.literal('AU'),
  z.literal('AW'),
  z.literal('AX'),
  z.literal('AZ'),
  z.literal('BA'),
  z.literal('BB'),
  z.literal('BD'),
  z.literal('BE'),
  z.literal('BF'),
  z.literal('BG'),
  z.literal('BH'),
  z.literal('BI'),
  z.literal('BJ'),
  z.literal('BL'),
  z.literal('BM'),
  z.literal('BN'),
  z.literal('BO'),
  z.literal('BQ'),
  z.literal('BR'),
  z.literal('BS'),
  z.literal('BT'),
  z.literal('BV'),
  z.literal('BW'),
  z.literal('BY'),
  z.literal('BZ'),
  z.literal('CA'),
  z.literal('CC'),
  z.literal('CD'),
  z.literal('CF'),
  z.literal('CG'),
  z.literal('CH'),
  z.literal('CI'),
  z.literal('CK'),
  z.literal('CL'),
  z.literal('CM'),
  z.literal('CN'),
  z.literal('CO'),
  z.literal('CR'),
  z.literal('CS'),
  z.literal('CU'),
  z.literal('CV'),
  z.literal('CX'),
  z.literal('CY'),
  z.literal('CZ'),
  z.literal('DE'),
  z.literal('DJ'),
  z.literal('DK'),
  z.literal('DM'),
  z.literal('DO'),
  z.literal('DZ'),
  z.literal('EC'),
  z.literal('EE'),
  z.literal('EG'),
  z.literal('EH'),
  z.literal('ER'),
  z.literal('ES'),
  z.literal('ET'),
  z.literal('FI'),
  z.literal('FJ'),
  z.literal('FK'),
  z.literal('FM'),
  z.literal('FO'),
  z.literal('FR'),
  z.literal('GA'),
  z.literal('GB'),
  z.literal('GD'),
  z.literal('GE'),
  z.literal('GF'),
  z.literal('GG'),
  z.literal('GH'),
  z.literal('GI'),
  z.literal('GL'),
  z.literal('GM'),
  z.literal('GN'),
  z.literal('GP'),
  z.literal('GQ'),
  z.literal('GR'),
  z.literal('GS'),
  z.literal('GT'),
  z.literal('GU'),
  z.literal('GW'),
  z.literal('GY'),
  z.literal('HK'),
  z.literal('HM'),
  z.literal('HN'),
  z.literal('HR'),
  z.literal('HT'),
  z.literal('HU'),
  z.literal('ID'),
  z.literal('IE'),
  z.literal('IL'),
  z.literal('IM'),
  z.literal('IN'),
  z.literal('IO'),
  z.literal('IQ'),
  z.literal('IR'),
  z.literal('IS'),
  z.literal('IT'),
  z.literal('JE'),
  z.literal('JM'),
  z.literal('JO'),
  z.literal('JP'),
  z.literal('KE'),
  z.literal('KG'),
  z.literal('KH'),
  z.literal('KI'),
  z.literal('KM'),
  z.literal('KN'),
  z.literal('KP'),
  z.literal('KR'),
  z.literal('KW'),
  z.literal('KY'),
  z.literal('KZ'),
  z.literal('LA'),
  z.literal('LB'),
  z.literal('LC'),
  z.literal('LI'),
  z.literal('LK'),
  z.literal('LR'),
  z.literal('LS'),
  z.literal('LT'),
  z.literal('LU'),
  z.literal('LV'),
  z.literal('LY'),
  z.literal('MA'),
  z.literal('MC'),
  z.literal('MD'),
  z.literal('ME'),
  z.literal('MF'),
  z.literal('MG'),
  z.literal('MH'),
  z.literal('MK'),
  z.literal('ML'),
  z.literal('MM'),
  z.literal('MN'),
  z.literal('MO'),
  z.literal('MP'),
  z.literal('MQ'),
  z.literal('MR'),
  z.literal('MS'),
  z.literal('MT'),
  z.literal('MU'),
  z.literal('MV'),
  z.literal('MW'),
  z.literal('MX'),
  z.literal('MY'),
  z.literal('MZ'),
  z.literal('NA'),
  z.literal('NC'),
  z.literal('NE'),
  z.literal('NF'),
  z.literal('NG'),
  z.literal('NI'),
  z.literal('NL'),
  z.literal('NO'),
  z.literal('NP'),
  z.literal('NR'),
  z.literal('NU'),
  z.literal('NZ'),
  z.literal('OM'),
  z.literal('PA'),
  z.literal('PE'),
  z.literal('PF'),
  z.literal('PG'),
  z.literal('PH'),
  z.literal('PK'),
  z.literal('PL'),
  z.literal('PM'),
  z.literal('PN'),
  z.literal('PR'),
  z.literal('PS'),
  z.literal('PT'),
  z.literal('PW'),
  z.literal('PY'),
  z.literal('QA'),
  z.literal('RE'),
  z.literal('RO'),
  z.literal('RS'),
  z.literal('RU'),
  z.literal('RW'),
  z.literal('SA'),
  z.literal('SB'),
  z.literal('SC'),
  z.literal('SD'),
  z.literal('SE'),
  z.literal('SG'),
  z.literal('SH'),
  z.literal('SI'),
  z.literal('SJ'),
  z.literal('SK'),
  z.literal('SL'),
  z.literal('SM'),
  z.literal('SN'),
  z.literal('SO'),
  z.literal('SR'),
  z.literal('SS'),
  z.literal('ST'),
  z.literal('SV'),
  z.literal('SX'),
  z.literal('SY'),
  z.literal('SZ'),
  z.literal('TC'),
  z.literal('TD'),
  z.literal('TF'),
  z.literal('TG'),
  z.literal('TH'),
  z.literal('TJ'),
  z.literal('TK'),
  z.literal('TL'),
  z.literal('TM'),
  z.literal('TN'),
  z.literal('TO'),
  z.literal('TR'),
  z.literal('TT'),
  z.literal('TV'),
  z.literal('TW'),
  z.literal('TZ'),
  z.literal('UA'),
  z.literal('UG'),
  z.literal('UM'),
  z.literal('US'),
  z.literal('UY'),
  z.literal('UZ'),
  z.literal('VA'),
  z.literal('VC'),
  z.literal('VE'),
  z.literal('VG'),
  z.literal('VI'),
  z.literal('VN'),
  z.literal('VU'),
  z.literal('WF'),
  z.literal('WS'),
  z.literal('YE'),
  z.literal('YT'),
  z.literal('ZA'),
  z.literal('ZM'),
  z.literal('ZW'),
])

export const itemCrawlerSchema = z.union([
  z.literal('google'),
  z.literal('msn'),
  z.literal('scirus'),
  z.literal('yahoo'),
  z.literal('iParadigms'),
])

export const datasetDatasetTypeSchema = z.union([
  z.literal('record'),
  z.literal('collection'),
  z.literal('crossmark_policy'),
  z.literal('other'),
])

export const datePrimitiveTypeSchema = z.string()

export const xrefDaySchema = z.any().min(2).max(2)

export const degreePrimitiveTypeSchema = z.string().min(2).max(255)

export const depositorNamePrimitiveTypeSchema = z.string().min(1).max(130)

export const doiPrimitiveTypeSchema = z.string()

export const doiBatchIdPrimitiveTypeSchema = z.string().min(4).max(100)

export const cmDomainSchema = z
  .string()
  .min(4)
  .max(1024)
  .regex(/[A-Za-z0-9_]+([-.][A-Za-z0-9_]+)*\.[A-Za-z0-9_]+([-.][A-Za-z0-9_]+)*/)

export const editionNumberPrimitiveTypeSchema = z.string().min(1).max(15)

export const emailAddressPrimitiveTypeSchema = z.string().min(6).max(200)

export const xrefMonthSchema = z.any()

export const xrefYearSchema = z.any().min(4).max(4)

export const stringSchema = z.string()

export const firstPagePrimitiveTypeSchema = z.string().min(1).max(32)

export const fullTitlePrimitiveTypeSchema = z.string().min(1).max(255)

export const givenNamePrimitiveTypeSchema = z
  .string()
  .min(1)
  .max(60)
  .regex(/[^\d\?]*[^\?\s]+[^\d]*/)

export const cmAssertionGroupLabelSchema = z.string().min(2).max(150)

export const cmAssertionGroupNameSchema = z.string().min(2).max(150)

export const groupTitlePrimitiveTypeSchema = z.string().min(1).max(1024)

export const identifierIdTypeSchema = z.union([
  z.literal('pii'),
  z.literal('sici'),
  z.literal('doi'),
  z.literal('dai'),
  z.literal('Z39.23'),
  z.literal('ISO-std-ref'),
  z.literal('std-designation'),
  z.literal('report-number'),
  z.literal('pmid'),
  z.literal('other'),
])

export const identifierSchema = identifierTSchema.extend({
  type: z.literal('element'),
  name: z.literal('identifier'),
  attributes: z.object({
    id_type: identifierIdTypeSchema,
  }),
})

export const institutionAcronymPrimitiveTypeSchema = z.string().min(1).max(255)

export const institutionDepartmentPrimitiveTypeSchema = z.string().min(2).max(255)

export const institutionNamePrimitiveTypeSchema = z.string().min(1).max(1024)

export const institutionPlacePrimitiveTypeSchema = z.string().min(2).max(255)

export const issuePrimitiveTypeSchema = z.string().min(1).max(32)

export const itemNumberSchema = itemNumberTSchema.extend({
  type: z.literal('element'),
  name: z.literal('item_number'),
  attributes: z.object({
    item_number_type: z.string().optional(),
  }),
})

export const keyPrimitiveTypeSchema = z.string()

export const cmAssertionLabelSchema = z.string().min(2).max(150)

export const itemLabelSchema = z.string()

export const languageSchema = z.union([
  z.literal('aa'),
  z.literal('ab'),
  z.literal('ae'),
  z.literal('af'),
  z.literal('ak'),
  z.literal('am'),
  z.literal('an'),
  z.literal('ar'),
  z.literal('as'),
  z.literal('av'),
  z.literal('ay'),
  z.literal('az'),
  z.literal('ba'),
  z.literal('be'),
  z.literal('bg'),
  z.literal('bh'),
  z.literal('bi'),
  z.literal('bm'),
  z.literal('bn'),
  z.literal('bo'),
  z.literal('br'),
  z.literal('bs'),
  z.literal('ca'),
  z.literal('ce'),
  z.literal('ch'),
  z.literal('co'),
  z.literal('cr'),
  z.literal('cs'),
  z.literal('cu'),
  z.literal('cv'),
  z.literal('cy'),
  z.literal('da'),
  z.literal('de'),
  z.literal('dv'),
  z.literal('dz'),
  z.literal('ee'),
  z.literal('el'),
  z.literal('en'),
  z.literal('eo'),
  z.literal('es'),
  z.literal('et'),
  z.literal('eu'),
  z.literal('fa'),
  z.literal('ff'),
  z.literal('fi'),
  z.literal('fj'),
  z.literal('fo'),
  z.literal('fr'),
  z.literal('fy'),
  z.literal('ga'),
  z.literal('gd'),
  z.literal('gl'),
  z.literal('gn'),
  z.literal('gu'),
  z.literal('gv'),
  z.literal('ha'),
  z.literal('he'),
  z.literal('hi'),
  z.literal('ho'),
  z.literal('hr'),
  z.literal('ht'),
  z.literal('hu'),
  z.literal('hy'),
  z.literal('hz'),
  z.literal('ia'),
  z.literal('id'),
  z.literal('ie'),
  z.literal('ig'),
  z.literal('ii'),
  z.literal('ik'),
  z.literal('io'),
  z.literal('is'),
  z.literal('it'),
  z.literal('iu'),
  z.literal('ja'),
  z.literal('jw'),
  z.literal('ka'),
  z.literal('kg'),
  z.literal('ki'),
  z.literal('kj'),
  z.literal('kk'),
  z.literal('kl'),
  z.literal('km'),
  z.literal('kn'),
  z.literal('ko'),
  z.literal('kr'),
  z.literal('ks'),
  z.literal('ku'),
  z.literal('kv'),
  z.literal('kw'),
  z.literal('ky'),
  z.literal('la'),
  z.literal('lb'),
  z.literal('lg'),
  z.literal('li'),
  z.literal('ln'),
  z.literal('lo'),
  z.literal('lt'),
  z.literal('lu'),
  z.literal('lv'),
  z.literal('mg'),
  z.literal('mu'),
  z.literal('mi'),
  z.literal('mk'),
  z.literal('ml'),
  z.literal('mn'),
  z.literal('mr'),
  z.literal('ms'),
  z.literal('mt'),
  z.literal('my'),
  z.literal('na'),
  z.literal('nb'),
  z.literal('nd'),
  z.literal('ne'),
  z.literal('ng'),
  z.literal('nl'),
  z.literal('nn'),
  z.literal('no'),
  z.literal('nr'),
  z.literal('nv'),
  z.literal('ny'),
  z.literal('oc'),
  z.literal('oj'),
  z.literal('om'),
  z.literal('or'),
  z.literal('os'),
  z.literal('pa'),
  z.literal('pi'),
  z.literal('pl'),
  z.literal('ps'),
  z.literal('pt'),
  z.literal('qu'),
  z.literal('rm'),
  z.literal('rn'),
  z.literal('ro'),
  z.literal('ru'),
  z.literal('rw'),
  z.literal('sa'),
  z.literal('sc'),
  z.literal('sd'),
  z.literal('se'),
  z.literal('sg'),
  z.literal('si'),
  z.literal('sk'),
  z.literal('sl'),
  z.literal('sm'),
  z.literal('sn'),
  z.literal('so'),
  z.literal('sq'),
  z.literal('sr'),
  z.literal('ss'),
  z.literal('st'),
  z.literal('su'),
  z.literal('sv'),
  z.literal('sw'),
  z.literal('ta'),
  z.literal('te'),
  z.literal('tg'),
  z.literal('th'),
  z.literal('ti'),
  z.literal('tk'),
  z.literal('tl'),
  z.literal('tn'),
  z.literal('to'),
  z.literal('tr'),
  z.literal('ts'),
  z.literal('tt'),
  z.literal('tw'),
  z.literal('ty'),
  z.literal('ug'),
  z.literal('uk'),
  z.literal('ur'),
  z.literal('uz'),
  z.literal('ve'),
  z.literal('vi'),
  z.literal('vo'),
  z.literal('wa'),
  z.literal('wo'),
  z.literal('xh'),
  z.literal('yi'),
  z.literal('yo'),
  z.literal('za'),
  z.literal('zh'),
])

export const lastPagePrimitiveTypeSchema = z.string().min(1).max(32)

export const contentItemLevelSequenceNumberSchema = z.any()

export const itemLinkHeaderRelationshipSchema = z.literal('dul')

export const dateTMediaTypeSchema = z.union([
  z.literal('online'),
  z.literal('print'),
  z.literal('other'),
])

export const mediaTypeSchema = z.union([z.literal('print'), z.literal('electronic')])

export const mimeTypeSchema = z.union([
  z.literal('text/css'),
  z.literal('text/csv'),
  z.literal('text/enriched'),
  z.literal('text/html'),
  z.literal('text/plain'),
  z.literal('text/richtext'),
  z.literal('text/rtf'),
  z.literal('text/sgml'),
  z.literal('text/tab-separated-values'),
  z.literal('text/xml'),
  z.literal('text/xml-external-parsed-entity'),
  z.literal('multipart/mixed'),
  z.literal('multipart/alternative'),
  z.literal('multipart/digest'),
  z.literal('multipart/parallel'),
  z.literal('multipart/appledouble'),
  z.literal('multipart/header-set'),
  z.literal('multipart/form-data'),
  z.literal('multipart/report'),
  z.literal('multipart/voice-message'),
  z.literal('multipart/signed'),
  z.literal('multipart/encrypted'),
  z.literal('multipart/byteranges'),
  z.literal('application/eps'),
  z.literal('application/epub+zip'),
  z.literal('application/octet-stream'),
  z.literal('application/postscript'),
  z.literal('application/rtf'),
  z.literal('application/applefile'),
  z.literal('application/mac-binhex40'),
  z.literal('application/wordperfect5.1'),
  z.literal('application/pdf'),
  z.literal('application/x-gzip'),
  z.literal('application/zip'),
  z.literal('application/gzip'),
  z.literal('application/macwriteii'),
  z.literal('application/msword'),
  z.literal('application/sgml'),
  z.literal('application/cals-1840'),
  z.literal('application/pgp-encrypted'),
  z.literal('application/pgp-signature'),
  z.literal('application/pgp-keys'),
  z.literal('application/sgml-open-catalog'),
  z.literal('application/rc'),
  z.literal('application/xml'),
  z.literal('application/xml-external-parsed-entity'),
  z.literal('application/xml-dtd'),
  z.literal('application/batch-SMTP'),
  z.literal('application/ipp'),
  z.literal('application/ocsp-request'),
  z.literal('application/ocsp-response'),
  z.literal('application/vnd.wolfram.mathematica'),
  z.literal('application/vnd.wolfram.mathematica.package'),
  z.literal('application/vnd.wolfram.player'),
  z.literal('application/vnd.oasis.opendocument.text'),
  z.literal('application/vnd.oasis.opendocument.presentation'),
  z.literal('application/vnd.oasis.opendocument.spreadsheet'),
  z.literal('application/vnd.ms-asf'),
  z.literal('application/vnd.ms-excel'),
  z.literal('application/vnd.ms-powerpoint'),
  z.literal('application/vnd.openxmlformats-officedocument.presentationml.presentation'),
  z.literal('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'),
  z.literal('application/vnd.openxmlformats-officedocument.wordprocessingml.document'),
  z.literal('application/epub+zip'),
  z.literal('application/regex.clinical-trial-number'),
  z.literal('image/fits'),
  z.literal('image/jpeg'),
  z.literal('image/gif'),
  z.literal('image/ief'),
  z.literal('image/g3fax'),
  z.literal('image/tiff'),
  z.literal('image/Graphics-Metafile'),
  z.literal('image/png'),
  z.literal('audio/basic'),
  z.literal('audio/32kadpcm'),
  z.literal('audio/mpeg'),
  z.literal('audio/parityfec'),
  z.literal('audio/MP4A-LATM'),
  z.literal('audio/mpa-robust'),
  z.literal('video/x-ms-wmv'),
  z.literal('video/avi'),
  z.literal('video/mpeg'),
  z.literal('video/quicktime'),
  z.literal('video/pointer'),
  z.literal('video/parityfec'),
  z.literal('video/MP4V-ES'),
  z.literal('video/mp4'),
  z.literal('chemical/x-alchemy'),
  z.literal('chemical/x-cache-csf'),
  z.literal('chemical/x-cactvs-binary'),
  z.literal('chemical/x-cactvs-binary'),
  z.literal('chemical/x-cactvs-binary'),
  z.literal('chemical/x-cdx'),
  z.literal('chemical/x-cerius'),
  z.literal('chemical/x-chemdraw'),
  z.literal('chemical/x-cif'),
  z.literal('chemical/x-mmcif'),
  z.literal('chemical/x-chem3d'),
  z.literal('chemical/x-cmdf'),
  z.literal('chemical/x-compass'),
  z.literal('chemical/x-crossfire'),
  z.literal('chemical/x-cml'),
  z.literal('chemical/x-csml'),
  z.literal('chemical/x-ctx'),
  z.literal('chemical/x-cxf'),
  z.literal('chemical/x-daylight-smiles'),
  z.literal('chemical/x-embl-dl-nucleotide'),
  z.literal('chemical/x-galactic-spc'),
  z.literal('chemical/x-gamess-input'),
  z.literal('chemical/x-gaussian-input'),
  z.literal('chemical/x-gaussian-checkpoint'),
  z.literal('chemical/x-gaussian-cube'),
  z.literal('chemical/x-gcg8-sequence'),
  z.literal('chemical/x-genbank'),
  z.literal('chemical/x-isostar'),
  z.literal('chemical/x-jcamp-dx'),
  z.literal('chemical/x-kinemage'),
  z.literal('chemical/x-macmolecule'),
  z.literal('chemical/x-macromodel-input'),
  z.literal('chemical/x-mdl-molfile'),
  z.literal('chemical/x-mdl-rdfile'),
  z.literal('chemical/x-mdl-rxnfile'),
  z.literal('chemical/x-mdl-sdfile'),
  z.literal('chemical/x-mdl-tgf'),
  z.literal('chemical/x-mif'),
  z.literal('chemical/x-mol2'),
  z.literal('chemical/x-molconn-Z'),
  z.literal('chemical/x-mopac-input'),
  z.literal('chemical/x-mopac-graph'),
  z.literal('chemical/x-ncbi-asn1'),
  z.literal('chemical/x-ncbi-asn1-binary'),
  z.literal('chemical/x-pdb'),
  z.literal('chemical/x-swissprot'),
  z.literal('chemical/x-vamas-iso14976'),
  z.literal('chemical/x-vmd'),
  z.literal('chemical/x-xtel'),
  z.literal('chemical/x-xyz'),
  z.literal('model/stl'),
  z.literal('model/x.stl-binary'),
  z.literal('model/x.stl-ascii'),
  z.literal('model/vrml'),
  z.literal('audio/x-wav'),
  z.literal('video/x-flv'),
  z.literal('Data/spcvue.htm'),
])

export const collectionMultiResolutionSchema = z.union([z.literal('lock'), z.literal('unlock')])

export const archiveNameSchema = z.union([
  z.literal('CLOCKSS'),
  z.literal('LOCKSS'),
  z.literal('Portico'),
  z.literal('KB'),
  z.literal('Internet Archive'),
  z.literal('DWT'),
])

export const cmAssertionNameSchema = z.string().min(2).max(150)

export const nameNameStyleSchema = z.union([
  z.literal('western'),
  z.literal('eastern'),
  z.literal('islensk'),
  z.literal('given-only'),
])

export const stringNameNameStyleSchema = z.union([
  z.literal('western'),
  z.literal('eastern'),
  z.literal('islensk'),
  z.literal('given-only'),
])

export const nameStyleSchema = z.union([
  z.literal('western'),
  z.literal('eastern'),
  z.literal('islensk'),
  z.literal('given-only'),
])

export const orcidSchema = orcidTSchema.extend({
  type: z.literal('element'),
  name: z.literal('ORCID'),
  attributes: z.object({
    authenticated: z.any(),
  }),
})

export const otherPagesPrimitiveTypeSchema = z.string().min(1).max(100)

export const saComponentParentDoiSchema = z.string()

export const componentParentRelationSchema = z.union([
  z.literal('isPartOf'),
  z.literal('isReferencedBy'),
  z.literal('isRequiredBy'),
  z.literal('isTranslationOf'),
])

export const partNumberPrimitiveTypeSchema = z.string().min(1).max(15)

export const proceedingsSubjectPrimitiveTypeSchema = z.string().min(1).max(255)

export const proceedingsTitlePrimitiveTypeSchema = z.string().min(1).max(511)

export const collectionPropertySchema = z.union([
  z.literal('list-based'),
  z.literal('country-based'),
  z.literal('crawler-based'),
  z.literal('text-mining'),
  z.literal('unspecified'),
  z.literal('syndication'),
  z.literal('link-header'),
])

export const standardMetadataPublicationStatusSchema = z.union([
  z.literal('released'),
  z.literal('withdrawn'),
])

export const publicationTypeSchema = z.union([
  z.literal('abstract_only'),
  z.literal('full_text'),
  z.literal('bibliographic_record'),
])

export const publisherNamePrimitiveTypeSchema = z.string().min(1).max(255)

export const publisherPlacePrimitiveTypeSchema = z.string().min(2).max(255)

export const noisbnReasonSchema = z.union([
  z.literal('archive_volume'),
  z.literal('monograph'),
  z.literal('simple_series'),
])

export const stdAltAsPublishedReasonSchema = z.string()

export const peerReviewRecommendationSchema = z.union([
  z.literal('major-revision'),
  z.literal('minor-revision'),
  z.literal('reject'),
  z.literal('reject-with-resubmit'),
  z.literal('accept'),
  z.literal('accept-with-reservation'),
])

export const referenceDistributionOptsSchema = z.union([
  z.literal('none'),
  z.literal('query'),
  z.literal('any'),
])

export const componentRegAgencySchema = z.string()

export const registrantPrimitiveTypeSchema = z.string().min(1).max(255)

export const resourceSchema = resourceTSchema.extend({
  type: z.literal('element'),
  name: z.literal('resource'),
  attributes: z.object({
    content_version: resourceContentVersionSchema,
    mime_type: mimeTypeSchema.optional(),
  }),
})

export const scnPolicyRefPrimitiveTypeSchema = z
  .string()
  .min(1)
  .max(2048)
  .regex(/([hH][tT][tT][pP]|[hH][tT][tT][pP][sS]|[fF][tT][pP]):\/\/.*/)

export const sequenceSchema = z.union([z.literal('first'), z.literal('additional')])

export const seriesNumberPrimitiveTypeSchema = z.string().min(1).max(15)

export const specialNumberingPrimitiveTypeSchema = z.string().min(1).max(15)

export const peerReviewStageSchema = z.union([
  z.literal('pre-publication'),
  z.literal('post-publication'),
])

export const stdDesignatorvalueTSchema = z.string().min(2).max(150)

export const suffixPrimitiveTypeSchema = z.string().min(1).max(10)

export const surnamePrimitiveTypeSchema = z
  .string()
  .min(1)
  .max(60)
  .regex(/[^\d\?]*[^\?\s]+[^\d]*/)

export const institutionIdTypeSchema = z.union([
  z.literal('ror'),
  z.literal('isni'),
  z.literal('wikidata'),
])

export const cmUpdateTypeSchema = z.union([
  z.literal('addendum'),
  z.literal('clarification'),
  z.literal('correction'),
  z.literal('corrigendum'),
  z.literal('erratum'),
  z.literal('expression_of_concern'),
  z.literal('new_edition'),
  z.literal('new_version'),
  z.literal('partial_retraction'),
  z.literal('removal'),
  z.literal('retraction'),
  z.literal('withdrawal'),
])

export const peerReviewTypeSchema = z.union([
  z.literal('referee-report'),
  z.literal('editor-report'),
  z.literal('author-comment'),
  z.literal('community-comment'),
  z.literal('manuscript'),
  z.literal('aggregate'),
  z.literal('recommendation'),
])

export const postedContentTypeSchema = z.union([
  z.literal('preprint'),
  z.literal('working_paper'),
  z.literal('letter'),
  z.literal('dissertation'),
  z.literal('report'),
  z.literal('review'),
  z.literal('other'),
])

export const volumePrimitiveTypeSchema = z.string().min(1).max(32)

export const formatSchema = formatTSchema.extend({
  type: z.literal('element'),
  name: z.literal('format'),
  attributes: z.object({
    mime_type: mimeTypeSchema.optional(),
  }),
})

export const institutionIdSchema = pidSchema.extend({
  type: z.literal('element'),
  name: z.literal('institution_id'),
  attributes: z.object({
    type: institutionIdTypeSchema,
  }),
})

export const isbnSchema = isbnTSchema.extend({
  type: z.literal('element'),
  name: z.literal('isbn'),
  attributes: z.object({
    media_type: mediaTypeSchema,
  }),
})

export const issnSchema = issnTSchema.extend({
  type: z.literal('element'),
  name: z.literal('issn'),
  attributes: z.object({
    media_type: mediaTypeSchema,
  }),
})

export const organizationSchema = organizationTSchema.extend({
  type: z.literal('element'),
  name: z.literal('organization'),
  attributes: z.object({
    contributor_role: contributorRoleSchema,
    language: languageSchema.optional(),
    nameStyle: nameStyleSchema.optional(),
    sequence: sequenceSchema,
  }),
})
